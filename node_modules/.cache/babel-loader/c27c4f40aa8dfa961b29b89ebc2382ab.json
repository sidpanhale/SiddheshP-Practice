{"ast":null,"code":"var _jsxFileName = \"/home/iprogrammer/Desktop/section20/src/Pages/NewQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport { useHistory } from \"react-router\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuote() {\n  _s();\n\n  const {\n    sendRequest,\n    status\n  } = useHttp(addQuote);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = quoteData => {\n    sendRequest(quoteData);\n    history.push(\"/quotes\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuoteForm, {\n      isLoading: status,\n      onAddQuote: addQuoteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewQuote, \"5R0BdBCtVz434540tvdSmkfpsRY=\", false, function () {\n  return [useHttp, useHistory];\n});\n\n_c = NewQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"sources":["/home/iprogrammer/Desktop/section20/src/Pages/NewQuote.js"],"names":["React","useEffect","QuoteForm","useHistory","useHttp","addQuote","NewQuote","sendRequest","status","history","push","addQuoteHandler","quoteData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BJ,OAAO,CAACC,QAAD,CAAvC;AAEA,QAAMI,OAAO,GAAGN,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,KAAK,WAAf,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACD;AACF,GAJQ,EAIN,CAACF,MAAD,EAASC,OAAT,CAJM,CAAT;;AAMA,QAAME,eAAe,GAAIC,SAAD,IAAe;AACrCL,IAAAA,WAAW,CAACK,SAAD,CAAX;AAEAH,IAAAA,OAAO,CAACC,IAAR,CAAa,SAAb;AACD,GAJD;;AAKA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEF,MAAtB;AAA8B,MAAA,UAAU,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArBuBL,Q;UACUF,O,EAEhBD,U;;;KAHMG,Q","sourcesContent":["import React, { useEffect } from \"react\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport { useHistory } from \"react-router\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nexport default function NewQuote() {\n  const { sendRequest, status } = useHttp(addQuote);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n\n    history.push(\"/quotes\");\n  };\n  return (\n    <div>\n      <QuoteForm isLoading={status} onAddQuote={addQuoteHandler} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}