{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from './counter';\nimport authReducer from './auth';\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authSlice.reducer\n  }\n});\nexport default store; // React-redux METHOD :\n// import { createStore } from \"redux\";\n// const initialState = { counter: 0, showCounter: true };\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"decrememt\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"increaseBy5\") {\n//     return {\n//       counter: state.counter + action.payload,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer);\n// export default store;","map":{"version":3,"sources":["/home/iprogrammer/Desktop/01-starting-project/src/store/index.js"],"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth","authSlice"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEJ,cAAX;AAA2BK,IAAAA,IAAI,EAAEC,SAAS,CAACH;AAA3C;AADkB,CAAD,CAA5B;AAIA,eAAeD,KAAf,C,CAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from './counter';\nimport authReducer from './auth';\n\nconst store = configureStore({\n  reducer: { counter: counterReducer, auth: authSlice.reducer },\n});\n\nexport default store;\n\n// React-redux METHOD :\n\n// import { createStore } from \"redux\";\n\n// const initialState = { counter: 0, showCounter: true };\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"decrememt\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n\n//   if (action.type === \"increaseBy5\") {\n//     return {\n//       counter: state.counter + action.payload,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// export default store;\n"]},"metadata":{},"sourceType":"module"}