{"ast":null,"code":"var _jsxFileName = \"/home/iprogrammer/Desktop/section20/src/Pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams, Route } from \"react-router\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: \"q1\",\n  author: \"abc\",\n  text: \"abc\"\n}, {\n  id: \"q2\",\n  author: \"def\",\n  text: \"def\"\n}];\nexport default function QuoteDetail(props) {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    erro\n  } = useHttp(getSingleQuote, true);\n  console.log(`useRouteMatch().path :: ${match.path} useParams().quoteId :: ${params.quoteId} useRouteMatch().url : ${match.url}`);\n  const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO QUOTE FOUND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuoteDetail, \"EsyZpnVI+bVFF08RsjMyIkhaH9U=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/iprogrammer/Desktop/section20/src/Pages/QuoteDetail.js"],"names":["React","useParams","Route","Comments","HighlightedQuote","Link","useRouteMatch","useHttp","getSingleQuote","DUMMY_DATA","id","author","text","QuoteDetail","props","match","params","sendRequest","status","data","loadedQuote","erro","console","log","path","quoteId","url","quote","find"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,cAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,kBAApC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAFiB,CAAnB;AAKA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,KAAK,GAAGT,aAAa,EAA3B;AACA,QAAMU,MAAM,GAAGf,SAAS,EAAxB;AAEA,QAAM;AAACgB,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAGC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAkDd,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA/D;AAEAc,EAAAA,OAAO,CAACC,GAAR,CACG,2BAA0BR,KAAK,CAACS,IAAK,2BAA0BR,MAAM,CAACS,OAAQ,0BAAyBV,KAAK,CAACW,GAAI,EADpH;AAIA,QAAMC,KAAK,GAAGlB,UAAU,CAACmB,IAAX,CAAiBD,KAAD,IAAWA,KAAK,CAACjB,EAAN,KAAaM,MAAM,CAACS,OAA/C,CAAd;;AAEA,MAAI,CAACE,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACf,IAA9B;AAAoC,MAAA,MAAM,EAAEe,KAAK,CAAChB;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEI,KAAK,CAACS,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAET,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACS,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAeD;;GA/BuBX,W;UACRP,a,EACCL,S,EAEyCM,O;;;KAJlCM,W","sourcesContent":["import React from \"react\";\nimport { useParams, Route } from \"react-router\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst DUMMY_DATA = [\n  { id: \"q1\", author: \"abc\", text: \"abc\" },\n  { id: \"q2\", author: \"def\", text: \"def\" },\n];\n\nexport default function QuoteDetail(props) {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const {sendRequest, status, data : loadedQuote, erro} = useHttp(getSingleQuote, true);\n\n  console.log(\n    `useRouteMatch().path :: ${match.path} useParams().quoteId :: ${params.quoteId} useRouteMatch().url : ${match.url}`\n  );\n\n  const quote = DUMMY_DATA.find((quote) => quote.id === params.quoteId);\n\n  if (!quote) {\n    return <p>NO QUOTE FOUND</p>;\n  }\n\n  return (\n    <>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}