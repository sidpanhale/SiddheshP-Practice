{"ast":null,"code":"var _jsxFileName = \"/home/iprogrammer/Desktop/section20/src/components/quotes/QuoteList.js\";\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  const queryParams = URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const onChangeSort = () => {\n    history.push('/quotes?sort=' + (isSortingAscending ? 'asc' : 'desc'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onChangeSort,\n        children: \"Sort \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/home/iprogrammer/Desktop/section20/src/components/quotes/QuoteList.js"],"names":["Fragment","QuoteItem","classes","QuoteList","props","queryParams","URLSearchParams","location","search","isSortingAscending","get","onChangeSort","history","push","sorting","list","quotes","map","quote","id","author","text"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,WAAW,GAAGC,eAAe,CAACC,QAAQ,CAACC,MAAV,CAAnC;AAEA,QAAMC,kBAAkB,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;;AAEA,QAAMC,YAAY,GAAE,MAAI;AACtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,mBAAmBJ,kBAAkB,GAAG,KAAH,GAAW,MAAhD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACY,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAI,MAAA,SAAS,EAAET,OAAO,CAACa,IAAvB;AAAA,gBACGX,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,MAAM,EAAED,KAAK,CAACE,MAHhB;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJd,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9BD;;KAAMhB,S;AAgCN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const queryParams = URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const onChangeSort =()=>{\n    history.push('/quotes?sort=' + (isSortingAscending ? 'asc' : 'desc'))\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={onChangeSort}>\n          Sort {}\n\n        </button>\n\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}