{"ast":null,"code":"var _jsxFileName = \"/home/iprogrammer/Desktop/section20/src/Pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: \"q1\",\n  author: \"abc\",\n  text: \"abc\"\n}, {\n  id: \"q2\",\n  author: \"def\",\n  text: \"def\"\n}];\nexport default function AllQuotes() {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_DATA\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AllQuotes, \"YEQsZKPg7v9PdbgYSKFTmw47USY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/home/iprogrammer/Desktop/section20/src/Pages/AllQuotes.js"],"names":["React","QuoteList","useHttp","getAllQuotes","DUMMY_DATA","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAFiB,CAAnB;AAKA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,YAHF;AAGgBC,IAAAA;AAHhB,MAIFX,OAAO,CAACC,YAAD,EAAe,IAAf,CAJX;AAMA,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEC;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GARuBI,S;UAKlBN,O;;;KALkBM,S","sourcesContent":["import React from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst DUMMY_DATA = [\n  { id: \"q1\", author: \"abc\", text: \"abc\" },\n  { id: \"q2\", author: \"def\", text: \"def\" },\n];\n\nexport default function AllQuotes() {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes, error\n  } = useHttp(getAllQuotes, true);\n\n  return <QuoteList quotes={DUMMY_DATA} />;\n}\n"]},"metadata":{},"sourceType":"module"}