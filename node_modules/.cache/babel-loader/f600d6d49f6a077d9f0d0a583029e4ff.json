{"ast":null,"code":"var _jsxFileName = \"/home/iprogrammer/Desktop/section20/src/Pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams, Route } from \"react-router\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: \"q1\",\n  author: \"abc\",\n  text: \"abc\"\n}, {\n  id: \"q2\",\n  author: \"def\",\n  text: \"def\"\n}];\nexport default function QuoteDetail(props) {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: \"NO QUOTE FOUND\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/iprogrammer/Desktop/section20/src/Pages/QuoteDetail.js"],"names":["React","useParams","Route","Comments","HighlightedQuote","DUMMY_DATA","id","author","text","QuoteDetail","props","params","quote","find","quoteId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,cAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAFiB,CAAnB;AAKA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAMW,KAAK,GAAGP,UAAU,CAACQ,IAAX,CAAgBD,KAAK,IAAIA,KAAK,CAACN,EAAN,KAAaK,MAAM,CAACG,OAA7C,CAAd;;AAEA,MAAG,CAACF,KAAJ,EAAW;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUI,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD;;GAjBuBL,W;UACPR,S;;;KADOQ,W","sourcesContent":["import React from \"react\";\nimport { useParams, Route } from \"react-router\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst DUMMY_DATA = [\n  { id: \"q1\", author: \"abc\", text: \"abc\" },\n  { id: \"q2\", author: \"def\", text: \"def\" },\n];\n\nexport default function QuoteDetail(props) {\n  const params = useParams();\n\n  const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId);\n\n  if(!quote) {\n    <p>NO QUOTE FOUND</p>\n  }\n\n  return (\n    <>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={`/quotes/${params.quoteId}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}